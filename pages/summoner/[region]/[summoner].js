import { riot } from '../../../utils/riot_api'
import { regions } from '../../../utils/riot_api';
import styles from '../../../styles/Summoner.module.css'
import React from 'react';
import { useRouter } from 'next/router'
import dynamic from 'next/dynamic'
import Head from 'next/head'

const Header = dynamic(() => import('../../../components/summoner/Header'));
const League = dynamic(() => import('../../../components/summoner/League'));
const Name = dynamic(() => import('../../../components/summoner/Name'));
const Matches = dynamic(() => import('../../../components/summoner/Matches'));


const Summoner = ({ data, matches, league }) => {
    const router = useRouter();
    const puid = data.puuid;
    return (
        <div className={`${styles.header}`}>

            <Head>
                <title>LOGGER | {data.name}</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <div className={styles.area}>
                <div className={`${styles.areaHeader} ${league.length === 0 ? 'justify-center' : 'justify-start'}`} >
                    <Header data={data}></Header>
                    <League league={league}></League>
                </div>

                <Name data={data}></Name>
                <Matches matches={matches} puid={puid} router={router}></Matches>

            </div>
        </div >
    );
}

export async function getServerSideProps({ params }) {
    const { region, summoner } = params;
    const group = (regions.filter((item) => item.short.toLowerCase() == region.toLowerCase()))[0].region;
    const data = await riot(`summoner/v4/summoners/by-name/${encodeURIComponent(summoner).toLowerCase()}`, { region });

    if (data["status"] || !data || data?.id === "undefined") {
        return {
            notFound: true,
        }
    }

    const matchesID = await riot(`match/v5/matches/by-puuid/${data.puuid}/ids`, { group, query: "start=0&count=5" });
    const matches = [];
    for (let match of matchesID) {
        const matchDetail = await riot(`match/v5/matches/${match}`, { group });
        matches.push(matchDetail);
    }
    const league = await riot(`league/v4/entries/by-summoner/${data.id}`, { region });
    const champions = await riot(`champion-mastery/v4/champion-masteries/by-summoner/${data.id}`, { region });

    if (matches?.msg || league?.msg || champions?.msg)
        console.error(matches?.msg || league?.msg || champions?.msg)
    data["champions"] = [champions[0], champions[1], champions[2]];
    return {
        props: {
            data,
            matches,
            league,
            region
        }
    }
}
export default Summoner